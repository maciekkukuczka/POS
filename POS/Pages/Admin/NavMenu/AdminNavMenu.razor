@using System.Reflection
<div class="top-row pl-4 navbar navbar-dark">
    <a class="navbar-brand" href="">POS</a>
    <button class="navbar-toggler" @onclick="ToggleNavMenu">
        <span class="navbar-toggler-icon"></span>
    </button>
</div>

<div class="@NavMenuCssClass" @onclick="ToggleNavMenu">
    <ul class="nav flex-column">
        <li class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="oi oi-home" aria-hidden="true"></span> Home
            </NavLink>
        </li>
        <li class="nav-item px-3">
            <NavLink class="nav-link" href="Admin/News">
                <span class="oi oi-plus" aria-hidden="true"></span> Newsy
            </NavLink>
        </li>
        <li class="nav-item px-3">
            <NavLink class="nav-link" href="Admin/Gallery">
                <span class="oi oi-plus" aria-hidden="true"></span> Galeria
            </NavLink>
        </li>
        <li class="nav-item px-3">
            <NavLink class="nav-link" href="Admin/Team">
                <span class="oi oi-plus" aria-hidden="true"></span> Zespół
            </NavLink>
        </li>

        <li class="nav-item px-3">
            <NavLink class="nav-link" href="Admin/CMS">
                <span class="oi oi-plus" aria-hidden="true"></span> Strony CMS
            </NavLink>
        </li>

        <li class="nav-item px-3">
            <NavLink class="nav-link" href="Admin/Dictionaries">
                <span class="oi oi-plus" aria-hidden="true"></span> Słowniki
            </NavLink>
        </li>
    </ul>
</div>
<div class="text-muted">v.@version Alpha</div>

@code {
    private bool collapseNavMenu = true;
    private string version;

    private string NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    protected override Task OnInitializedAsync()
    {
    // return base.OnInitializedAsync();
        GetAssemblyVersion();
        return Task.CompletedTask;
    }

    private void GetAssemblyVersion()
    {
        version = Assembly.GetEntryAssembly().GetName().Version.ToString();
    }

}